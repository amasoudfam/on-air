openapi: '3.0.2'
info:
  title: on-air APIs
  version: 1.0.0
servers:
  - url: https://localhost:8080
    description: on-air project
paths:
  /flights:
    get:
      summary: Get a list of flights
      tags:
        - Flights
      parameters:
        - in: query
          name: origin
          required: true
          schema:
            type: string
          description: The origin of the flight
        - in: query
          name: destination
          required: true
          schema:
            type: string
          description: The destination of the flight
        - in: query
          name: date
          required: true
          schema:
            type: string
          description: "The date of the flight (format: '2006-01-02')"
        - in: query
          name: airline
          schema:
            type: string
          description: The airline of the flight
        - in: query
          name: airplane
          schema:
            type: string
          description: The airplane of the flight
        - in: query
          name: start_time
          schema:
            type: string
          description: "The start time of the flight (format: 'HH:MM')"
        - in: query
          name: end_time
          schema:
            type: string
          description: "The end time of the flight (format: 'HH:MM')"
        - in: query
          name: empty_capacity
          schema:
            type: boolean
          description: Filter flights with empty capacity
        - in: query
          name: order_by
          schema:
            type: string
            enum:
              - price
              - time
              - duration
          description: Sort flights by price, time, or duration
        - in: query
          name: sort_order
          schema:
            type: string
            enum: 
              - asc
              - desc
          description: Sort order (ascending or descending)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetFlightsResponse'
        '400':
          description: Invalid query parameters
        '422':
          description: Unprocessable Entity
        '500':
          description: Internal Server Error
  /passenger:
    post:
      summary: Create a new passenger
      tags:
        - Passengers
      requestBody:
        description: JSON object containing passenger information
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePassengerRequest'
      responses:
        '201':
          description: Successful operation
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
    get:
      summary: Get all passengers
      tags:
        - Passengers
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/GetPassengersResponse"
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /tickets/Reserve:
    post:
      summary: Create a new Ticket
      tags:
        - Tickets
      requestBody:
        description: JSON object containing Ticket information
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReserveRequest'
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                type: "string"
                $ref: "#/components/schemas/ReserveResponse"
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /payment/pay:
    post:
      summary: Create a new request pay
      tags:
        - Payments
      parameters:
        - in: query
          name: ticket_id
          required: true
          schema:
            type: integer
          description: The ticket_id of the ticket
      requestBody:
        description: JSON object containing payment information
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PayResponse'
      responses:
        '201':
          description: Successful operation
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /payment/callBack: 
    post:
      summary: call back url to verify
      tags:
        - Payments
      parameters:
        - in: query
          name: payment_id
          required: true
          schema:
            type: integer
          description: The payment_id of the payment
      requestBody:
        description: JSON object containing payment information
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CallBackResponse'
      responses:
        '201':
          description: Successful operation
        '400':
          description: Bad request
  /tickets:
    get:
      summary: Get all tickets
      tags: 
          - Tickets
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/GetTicketsResponse"
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
tags:
  - name: Flights
    description: Operations related to flights
  - name: Passengers
    description: Operations related to passengers
  - name: Tickets
    description: Operations related to Tickets
  - name: Payments
    description: Operations related to Payment
components:
  schemas:
    Flight:
      type: object
      properties:
        number:
          type: string
        airplane:
          type: string
        airline:
          type: string
        price:
          type: integer
        origin:
          type: string
        destination:
          type: string
        capacity:
          type: integer
        emptyCapacity:
          type: integer
        startedAt:
          type: string
          format: date-time
        finishedAt:
          type: string
          format: date-time
    GetFlightsResponse:
      type: object
      properties:
        flights:
          type: "array"
          items:
            $ref: '#/components/schemas/Flight'
    CreatePassengerRequest:
      type: "object"
      properties:
        national_code:
          type: "string"
          example: "1234567890"
        first_name:
          type: "string"
          example: "John"
        last_name:
          type: "string"
          example: "Doe"
        gender:
          type: "string"
          example: "male"
      required:
        - national_code
        - first_name
        - last_name
        - gender
    GetPassengersResponse:
      type: "object"
      properties:
        national_code:
          type: "string"
          example: "1234567890"
        first_name:
          type: "string"
          example: "John"
        last_name:
          type: "string"
          example: "Doe"
        gender:
          type: "string"
          example: "male"
      required:
        - national_code
        - first_name
        - last_name
        - gender
    ReserveRequest:
      type: "object"
      properties:
        flight_number:
          type: "string"
          example: "123131454"
        passengers:
          type: "array"
          items:
            type: integer
      required:
        - flight_number
    ReserveResponse:
      type: "object"
      properties:
        status:
          type: "integer"
          example: "ticket_id"
    PayResponse:
      type: "object"
      properties:
        gate_way_url:
          type: "string"
          example: "http://example.com/token=xyz123"
      required:
        - gate_way_url
    CallBackResponse:
      type: "object"
      properties:
        status:
          type: "string"
          example: "verified"
      required:
        - status
    GetTicketsResponse:
      type: "object"
      properties:
        id:
          type: "number"
        unit_price:
          type: "number"
          example: 1200000
        count:
          type: "number"
          example: 2
        status:
          type: "string"
          example: "complete"
        created_at:
          type: "string"
          example: "2006-01-02 15:04"
        user: 
          type: "object"
          $ref: "#/components/schemas/TicketUser"
        flight:
          type: "object"
          $ref: "#/components/schemas/TicketFlight"
        passengers:
          type: "array"
          items:
            type: "object"
            $ref: "#/components/schemas/TicketPassenger"
    TicketUser:
      type: "object"
      properties:
        first_name: 
          type: "string"
          example: "john"
        last_name: 
          type: "string"
          example: "parker"
        email: 
          type: "string"
          example: "test@example.com"
        phone_number:
          type: "number"
          example: "09122222222"
    TicketFlight: 
      type: "object"
      properties:
        number:     
          type: "string"
          example: "F102"
        airplane:
          type: "string"
          example: "F12"
        airline:
          type: "string"
          example: "Aseman"
        started_at:
          type: "string"
          example: "2006-01-02 15:04"
        finished_at:
          type: "string"
          example: "2006-01-02 15:04"
        from_city: 
            type: "object"
            $ref: "#/components/schemas/TicketFlightCity"
        to_city: 
            type: "object"
            $ref: "#/components/schemas/TicketFlightCity"
    TicketPassenger:
      type: "object"
      properties:
        first_name:     
          type: "string"
          example: "john"
        last_name:
          type: "string"
          example: "parker"
        gender:
          type: "string"
          example: "male"
        national_code:
          type: "string"
          example: "25500000000"
    TicketFlightCity:
      type: "object"
      properties:
        name:     
          type: "string"
          example: "Shiraz"
        country:
          type: "object"
          $ref: "#/components/schemas/TicketFlightCountry"
    TicketFlightCountry:
      type: "object"
      properties:
        name:     
          type: "string"
          example: "Iran"
